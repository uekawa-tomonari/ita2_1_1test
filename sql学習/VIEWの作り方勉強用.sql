CREATE TABLE TEST_TABLE
(
	COLUMN_ID  INT  ,
	COL_TYPE   INT  ,
	PATTERN_ID INT  ,
	VAL_VARS_LINK_ID INT ,
	KEY_VARS_LINK_ID INT ,
	PRIMARY KEY (COLUMN_ID)
)ENGINE = InnoDB, CHARSET = utf8, COLLATE = utf8_bin, ROW_FORMAT=COMPRESSED ,KEY_BLOCK_SIZE=8;

INSERT INTO TEST_TABLE 
	(COLUMN_ID,COL_TYPE,PATTERN_ID,VAL_VARS_LINK_ID,KEY_VARS_LINK_ID)
	VALUES(1,1,1,1,null);
INSERT INTO TEST_TABLE 
	(COLUMN_ID,COL_TYPE,PATTERN_ID,VAL_VARS_LINK_ID,KEY_VARS_LINK_ID)
	VALUES(2,2,1,null,2);
INSERT INTO TEST_TABLE 
	(COLUMN_ID,COL_TYPE,PATTERN_ID,VAL_VARS_LINK_ID,KEY_VARS_LINK_ID)
	VALUES(3,3,2,1,2);



CREATE OR REPLACE VIEW TEST_VIEW AS 
SELECT 
	TAB_A.COLUMN_ID,
	TAB_A.COL_TYPE,
	TAB_A.PATTERN_ID,
	TAB_A.VAL_VARS_LINK_ID,
	TAB_A.KEY_VARS_LINK_ID,
	CASE TAB_A.VAL_VARS_LINK_ID IS NULL WHEN 1 THEN NULL ELSE TAB_B.MODULE_PTN_LINK_ID END AS VAL_VARS_PTN_LINK_ID,
	CASE TAB_A.KEY_VARS_LINK_ID IS NULL WHEN 1 THEN NULL ELSE TAB_B.MODULE_PTN_LINK_ID END AS KEY_VARS_PTN_LINK_ID
FROM TEST_TABLE TAB_A
LEFT JOIN D_TERRAFORM_MODULE_PTN_VARS_LINK_2 TAB_B ON (TAB_A.PATTERN_ID = TAB_B.PATTERN_ID AND 
	(TAB_A.VAL_VARS_LINK_ID = TAB_B.MODULE_VARS_LINK_ID || TAB_A.KEY_VARS_LINK_ID = TAB_B.MODULE_VARS_LINK_ID));
